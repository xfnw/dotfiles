#!/usr/bin/env python3

from lxml import etree
from PIL import Image, ImageDraw, ImageFont
import re, sys, argparse

BBOX = re.compile(r"bbox ([0-9]+) ([0-9]+) ([0-9]+) ([0-9]+)")
NS = {"xhtml": "http://www.w3.org/1999/xhtml"}

parser = argparse.ArgumentParser()
parser.add_argument("-c", default="ocrx_word")
parser.add_argument("-t", action="store_true")
parser.add_argument("-C", action="store_true")
args = parser.parse_args()

root = etree.fromstring(sys.stdin.buffer.read())
font = ImageFont.load_default(size = 16)

def textsize(text):
    left, top, right, bottom = font.getbbox(text)
    return right - left, bottom

for doc in root.xpath('//xhtml:div[@class="ocr_page"]', namespaces=NS):
    [_, _, w, h] = re.search(BBOX, doc.xpath('string(@title)')).groups()
    img = Image.new(mode="RGBA", color=(0, 0, 0, 0) if args.t else (0, 0, 0, 255), size=(int(w), int(h)))

    for e in doc.xpath('//*[@class="{}"]'.format(args.c), namespaces=NS):
        [x1, y1, x2, y2] = map(lambda x: int(x), re.search(BBOX, e.xpath('string(@title)')).groups())
        text = ' '.join(e.xpath('string()').split())
        tw, th = textsize(text)
        timg = Image.new(mode="RGBA", color=(0, 0, 0, 255) if args.t else (0, 0, 0, 0), size=(tw, th))
        draw = ImageDraw.Draw(timg)
        if not args.C:
            draw.text((0, 0), text, (255, 255, 255, 255), font=font)
        timg = timg.resize((x2-x1, y2-y1))
        img.alpha_composite(timg, (x1, y1))

    img.save(sys.stdout, "PNG", optimize=True)
